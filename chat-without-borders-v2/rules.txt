Multiple matches
=================

service cloud.firestore {
  match /databases/{database}/documents {
    match /reports/{document} {
     allow read: if isConditionMet();
     allow write: if false;
    }

    match /{document=**} {
     allow read, write: if isModerator();
    }
  }
}


Rules are not filters
======================

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow the user to read data if the document has the 'visibility'
    // field set to 'public'
    match /cities/{city} {
      allow read: if resource.data.visibility == 'public';
    }
  }
}

db.collection("cities").get()
    .then(function(querySnapshot) {
        querySnapshot.forEach(function(doc) {
            console.log(doc.id, " => ", doc.data());
    });
});

db.collection("cities").where("visibility", "==", "public").get()
    .then(function(querySnapshot) {
        querySnapshot.forEach(function(doc) {
            console.log(doc.id, " => ", doc.data());
        });
    });


Test mode Rules
==============

service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
     allow read, write: if true;
    }
  }
}