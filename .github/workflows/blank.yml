name: Release

on:
  pull_request:
    branches:
      - master
    types:
      - closed

jobs:
  publish_release:
    if: github.event.pull_request.merged &&
      contains(github.event.pull_request.labels.*.name, 'release:pending') &&
      startsWith(github.event.pull_request.title, '[chore] Release')

    runs-on: ubuntu-latest

    steps:
    - name: Checkout source for staging
      uses: actions/checkout@v2
      with:
        path: staging
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.6

    - name: Prepare release
      id: prepare
      run: ./.github/scripts/prepare_release.sh
      working-directory: staging
      env:
        DRYRUN_RELEASE: ${{ contains(github.event.pull_request.labels.*.name, 'release:dryrun') }}
        SKIP_TWEET: ${{ contains(github.event.pull_request.labels.*.name, 'release:skip-tweet') }}

    - name: Install dependencies
      working-directory: staging
      run: echo Installing dependencies

    - name: Run tests
      working-directory: staging
      run: |
        echo Running unit tests
        echo Running integration tests

    - name: Build release artifacts
      working-directory: staging
      run: |
        echo Building release artifacts
        mkdir -p dist
        echo Test release > dist/output.txt

    - name: Archive artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dist
        path: staging/dist

    - name: Create release tag
      if: success() && steps.prepare.outputs.publish
      # https://github.com/actions/create-release/pull/32
      uses: fleskesvor/create-release@1a72e235c178bf2ae6c51a8ae36febc24568c5fe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.prepare.outputs.version }}
        release_name: FirCloud ${{ steps.prepare.outputs.version }}
        body: ${{ steps.prepare.outputs.changelog }}
        draft: false
        prerelease: false

    - name: Publish to Pypi
      if: success() && steps.prepare.outputs.publish
      working-directory: deploy
      run: echo Publishing to Pypi

    - name: Post to Twitter
      if: success() && steps.prepare.outputs.tweet
      run: echo Posting Tweet
      continue-on-error: true
